(()=>{"use strict";var e={d:(o,t)=>{for(var a in t)e.o(t,a)&&!e.o(o,a)&&Object.defineProperty(o,a,{enumerable:!0,get:t[a]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o)};e.d({},{z:()=>g});class o{static fromJson({id:e,tarea:t,completado:a,creado:c,fechaInicio:n,fechaFin:r}){const i=new o(t,n,r);return i.id=e,i.completado=a,i.creado=c,i.fechaInicio=n||(new Date).toISOString(),i.fechaFin=r||"",i}constructor(e,o=(new Date).toISOString(),t=""){this.tarea=e,this.id=(new Date).getTime(),this.completado=!1,this.creado=(new Date).toISOString(),this.fechaInicio=o,this.fechaFin=t,this.calendarEvent=null}}const t=()=>{const e=["#3788d8","#16c79a","#ff6b6b","#f9ca24","#9980fa"];return e[Math.floor(Math.random()*e.length)]},a=document.querySelector(".todo-list"),c=document.querySelector(".new-todo"),n=document.querySelector("#fecha-inicio"),r=document.querySelector("#fecha-fin"),i=document.querySelector(".clear-completed"),l=document.querySelector(".filters"),d=document.querySelectorAll(".filtro"),s=document.querySelector("#agregar-tarea"),h=e=>{const o=`\n        <li class="${e.completado?"completed":""}" data-id="${e.id}">\n            <div class="view">\n                <input class="toggle" type="checkbox" ${e.completado?"checked":""}>\n                <label>${e.tarea}</label>\n                <p> Inicio: ${e.fechaInicio} - ⏳ Fin: ${e.fechaFin||"No asignado"}</p>\n                <button class="destroy"></button>\n            </div>\n            <input class="edit" value="${e.tarea}">\n        </li>\n    `,t=document.createElement("div");return t.innerHTML=o,a.append(t.firstElementChild),f(e),t.firstElementChild},f=e=>{if(window.calendar&&e.fechaInicio){const o=window.calendar.addEvent({title:e.tarea,start:e.fechaInicio,end:e.fechaFin||e.fechaInicio,backgroundColor:u(),borderColor:u()});e.calendarEvent=o}},u=()=>{const e=["#3788d8","#16c79a","#ff6b6b","#f9ca24","#9980fa"];return e[Math.floor(Math.random()*e.length)]};s.addEventListener("click",(()=>{const e=c.value.trim(),t=n.value||(new Date).toISOString().split("T")[0],a=r.value||"";if(e.length>0){const i=new o(e,t,a);g.nuevoTodo(i),h(i),c.value="",n.value="",r.value=""}})),a.addEventListener("click",(e=>{const o=e.target.localName,t=e.target.closest("li");if(!t)return;const c=t.dataset.id;"input"===o&&"checkbox"===e.target.type?(g.marcarCompletado(c),t.classList.toggle("completed")):"button"===o&&(g.todos[g.todos.findIndex((e=>e.id==c))].calendarEvent&&g.todos[g.todos.findIndex((e=>e.id==c))].calendarEvent.remove(),g.eliminarTodo(c),a.removeChild(t))})),i.addEventListener("click",(()=>{g.eliminarCompletados();for(let e=a.children.length-1;e>=0;e--){const o=a.children[e];o.classList.contains("completed")&&a.removeChild(o)}})),l.addEventListener("click",(e=>{const o=e.target.text;if(!o)return;d.forEach((e=>e.classList.remove("selected"))),e.target.classList.add("selected");const t=m(o);g.actualizarCalendario(t);for(const e of a.children){e.classList.remove("hidden");const t=e.classList.contains("completed");switch(o){case"Pendientes":t&&e.classList.add("hidden");break;case"Completados":t||e.classList.add("hidden")}}}));const m=e=>{let o=g.todos;switch(e){case"Pendientes":o=o.filter((e=>!e.completado));break;case"Completados":o=o.filter((e=>e.completado))}return o};console.log("index.js cargado");const g=new class{constructor(){this.cargarLocalStorage()}nuevoTodo(e){this.todos.push(e),this.guardarLocalStorage(),this.actualizarCalendario(),console.log("Se creó la tarea con fecha inicio:",e.fechaInicio," y fecha fin:",e.fechaFin)}eliminarTodo(e){this.todos=this.todos.filter((o=>o.id!=e)),this.guardarLocalStorage(),this.actualizarCalendario(),console.log("Se borró la tarea")}marcarCompletado(e){for(const o of this.todos)if(o.id==e){o.completado=!o.completado,this.guardarLocalStorage(),this.actualizarCalendario(),console.log("Se completó la tarea");break}}eliminarCompletados(){this.todos=this.todos.filter((e=>!e.completado)),this.guardarLocalStorage(),this.actualizarCalendario(),console.log("Se borraron los completados")}guardarLocalStorage(){localStorage.setItem("todo",JSON.stringify(this.todos)),console.log("Guardado en localStorage:",JSON.stringify(this.todos))}cargarLocalStorage(){this.todos=localStorage.getItem("todo")?JSON.parse(localStorage.getItem("todo")):[],this.todos=this.todos.map((e=>({...o.fromJson(e),fechaInicio:e.fechaInicio||"",fechaFin:e.fechaFin||""}))),this.actualizarCalendario(),console.log("Se cargaron las tareas desde localStorage")}actualizarCalendario(e=this.todos){window.calendar&&(window.calendar.getEvents().forEach((e=>e.remove())),e.forEach((e=>{if(e.fechaInicio){const o=window.calendar.addEvent({title:e.tarea,start:e.fechaInicio,end:e.fechaFin||e.fechaInicio,backgroundColor:t(),borderColor:t()});e.calendarEvent=o}})))}};g.todos.forEach(h)})();